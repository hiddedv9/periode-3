@{
    Page.Title = "Present Planner";
    //Layout = "Your Layout Page goes here";
    var newmsgs = 5;
    AppState["newmsgs"] = newmsgs;
    Validation.RequireField("voornaam_bruid", "De naam van de bruidegom is vereist!");
    Validation.RequireField("voornaam_bruidegom", "De naam van de bruid is vereist!");
    Validation.RequireField("inputemail", "Emailadres is vereist!");
    Validation.RequireField("inputpassword", "wachtwoord is vereist!");
    if (IsPost && Validation.IsValid())
    {

        var vrouwnaam = Request.Form["voornaam_bruid"];
        string mannaam = Request.Form["voornaam_bruidegom"];
        string email = Request.Form["inputemail"];
        string passwd = Request.Form["inputpassword"];

        //variabelen uit form



        //GUID genereren
        var uniquekey = Guid.NewGuid().ToString();

        //password hashing

        string hashedpw = Crypto.HashPassword(passwd);

        //db logica
        string connectionString = @"Data Source=(LocalDB)\MSSQLLocalDB;AttachDbFilename=|DataDirectory|\PresentPlanner.mdf;Integrated Security=True";
        string provider = "System.Data.SqlClient";
        Database db = Database.OpenConnectionString(connectionString, provider);
        var sql = "SELECT 1 FROM Bruidsparen WHERE emailadres=@0";
        dynamic result = db.Query(sql, email);
        if (result != null) //als email al bestaat, geef error.
        {
            Response.Redirect("error.cshtml");
        }
        else //maak een account aan.
        {
            sql = "INSERT INTO Bruidsparen(Mannaam,Vrouwnaam,uniquekey,emailadres,passhash) VALUES(@0,@1,@2,@3,@4)";



            db.Execute(sql, mannaam, vrouwnaam, uniquekey, email, hashedpw);
            Response.Redirect("home.cshtml");
        }
        db.Close();
    }

}
<head>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
    <link type="text/css" rel="stylesheet" href="css/materialize.min.css" media="screen,projection" />
    <link type="text/css" rel="stylesheet" href="~/css/home.css" />
</head>
<body>

    @RenderPage("layout/_nav.cshtml")


    <div class="container">
        <form  method="post" class="col s12">
            <div class="row">
                <div class="input-field col s6">
                    <input id="voornaam_bruidegom" name="voornaam_bruidegom" type="text" class="validate">
                    <label class="active" for="voornaam_bruidegom">Voornaam Bruidegom</label>
                </div>
                
                <div class="input-field col s6">
                    <input id="voornaam_bruid" name="voornaam_bruid" type="text" class="validate">
                    <label class="active" for="voornaam_bruid">Voornaam Bruid</label>
                </div>
            </div>



            <div class="row">
                <div class="input-field col s12">
                    <input id="inputemail" name="inputemail" type="email" class="validate">
                    <label class="active" for="email">Email</label>
                </div>
            </div>
            <div class="row">
                <div class="input-field col s12">
                    <input id="inputpassword" name="inputpassword" type="password" class="validate">
                    <label class="active" for="password">Password</label>
                </div>
            </div>

            <button class="btn waves-effect waves-light" type="submit" name="action">
                Register
                <i class="material-icons right">send</i>
            </button>

            @Html.ValidationSummary()
        </form>
    </div>



</body>

@RenderPage("layout/_footer.cshtml")


